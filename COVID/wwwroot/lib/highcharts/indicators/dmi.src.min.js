"use strict";!function(e){"object"==typeof module&&module.exports?module.exports=e.default=e:"function"==typeof define&&define.amd?define("highcharts/indicators/dmi",["highcharts","highcharts/modules/stock"],function(t){return e(t),e.Highcharts=t,e}):e("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(t){t=t?t._modules:{};function e(t,e,o,a){t.hasOwnProperty(e)||(t[e]=a.apply(null,o))}e(t,"Mixins/MultipleLines.js",[t["Core/Globals.js"],t["Core/Utilities.js"]],function(t,e){var u=e.defined,c=e.error,h=e.merge,y=t.seriesTypes.sma;return{pointArrayMap:["top","bottom"],pointValKey:"top",linesApiNames:["bottomLine"],getTranslatedLinesNames:function(e){var o=[];return(this.pointArrayMap||[]).forEach(function(t){t!==e&&o.push("plot"+t.charAt(0).toUpperCase()+t.slice(1))}),o},toYData:function(e){var o=[];return(this.pointArrayMap||[]).forEach(function(t){o.push(e[t])}),o},translate:function(){var a,i=this,t=i.pointArrayMap,n=i.getTranslatedLinesNames();y.prototype.translate.apply(i,arguments),i.points.forEach(function(o){t.forEach(function(t,e){null!==(a=o[t])&&(o[n[e]]=i.yAxis.toPixels(a,!0))})})},drawGraph:function(){var o,a=this,t=a.pointValKey,e=a.linesApiNames,i=a.points,n=i.length,s=a.options,r=a.graph,p={options:{gapSize:s.gapSize}},l=[];a.getTranslatedLinesNames(t).forEach(function(t,e){for(l[e]=[];n--;)o=i[n],l[e].push({x:o.x,plotX:o.plotX,plotY:o[t],isNull:!u(o[t])});n=i.length}),e.forEach(function(t,e){l[e]?(a.points=l[e],s[t]?a.options=h(s[t].styles,p):c('Error: "There is no '+t+' in DOCS options declared. Check if linesApiNames are consistent with your DOCS line names." at mixin/multiple-line.js:34'),a.graph=a["graph"+t],y.prototype.drawGraph.call(a),a["graph"+t]=a.graph):c('Error: "'+t+" doesn't have equivalent in pointArrayMap. To many elements in linesApiNames relative to pointArrayMap.\"")}),a.points=i,a.options=s,a.graph=r,y.prototype.drawGraph.call(a)}}}),e(t,"Stock/Indicators/DMI/DMIIndicator.js",[t["Mixins/MultipleLines.js"],t["Core/Color/Palette.js"],t["Core/Series/SeriesRegistry.js"],t["Core/Utilities.js"]],function(t,e,o,a){var i,n,s=this&&this.__extends||(i=function(t,e){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)e.hasOwnProperty(o)&&(t[o]=e[o])})(t,e)},function(t,e){function o(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(o.prototype=e.prototype,new o)}),r=o.seriesTypes.sma,p=a.correctFloat,l=a.extend,x=a.isArray,a=a.merge,e=(s(u,n=r),u.prototype.calculateDM=function(t,e,o){var a=t[e][1],i=t[e][2],n=t[e-1][1],e=t[e-1][2],i=e-i<a-n?o?Math.max(a-n,0):0:o?0:Math.max(e-i,0);return p(i)},u.prototype.calculateDI=function(t,e){return t/e*100},u.prototype.calculateDX=function(t,e){return p(Math.abs(t-e)/Math.abs(t+e)*100)},u.prototype.smoothValues=function(t,e,o){return p(t-t/o+e)},u.prototype.getTR=function(t,e){return p(Math.max(t[1]-t[2],e?Math.abs(t[1]-e[3]):0,e?Math.abs(t[2]-e[3]):0))},u.prototype.getValues=function(t,e){var o=e.period,a=t.xData,i=t.yData,n=i?i.length:0,s=[],r=[],p=[];if(!(a.length<=o)&&x(i[0])&&4===i[0].length){for(var l=0,u=0,c=0,h=1;h<n;h++){var y,f,d,m=void 0,D=void 0,g=void 0,v=void 0,M=void 0,I=void 0;h<=o?(l+=m=this.calculateDM(i,h,!0),u+=D=this.calculateDM(i,h),c+=g=this.getTR(i[h],i[h-1]),h===o&&(v=this.calculateDI(l,c),M=this.calculateDI(u,c),I=this.calculateDX(l,u),s.push([a[h],I,v,M]),r.push(a[h]),p.push([I,v,M]))):(m=this.calculateDM(i,h,!0),D=this.calculateDM(i,h),g=this.getTR(i[h],i[h-1]),y=this.smoothValues(l,m,o),f=this.smoothValues(u,D,o),d=this.smoothValues(c,g,o),u=f,v=this.calculateDI(l=y,c=d),M=this.calculateDI(u,c),I=this.calculateDX(l,u),s.push([a[h],I,v,M]),r.push(a[h]),p.push([I,v,M]))}return{values:s,xData:r,yData:p}}},u.defaultOptions=a(r.defaultOptions,{params:{index:void 0},marker:{enabled:!1},tooltip:{pointFormat:'<span style="color: {point.color}">‚óè</span><b> {series.name}</b><br/><span style="color: {point.color}">DX</span>: {point.y}<br/><span style="color: {point.series.options.plusDILine.styles.lineColor}">+DI</span>: {point.plusDI}<br/><span style="color: {point.series.options.minusDILine.styles.lineColor}">-DI</span>: {point.minusDI}<br/>'},plusDILine:{styles:{lineWidth:1,lineColor:e.positiveColor}},minusDILine:{styles:{lineWidth:1,lineColor:e.negativeColor}},dataGrouping:{approximation:"averages"}}),u);function u(){return null!==n&&n.apply(this,arguments)||this}return l(e.prototype,{nameBase:"DMI",pointArrayMap:["y","plusDI","minusDI"],parallelArrays:["x","y","plusDI","minusDI"],pointValKey:"y",linesApiNames:["plusDILine","minusDILine"],drawGraph:t.drawGraph,getTranslatedLinesNames:t.getTranslatedLinesNames,translate:t.translate,toYData:t.toYData}),o.registerSeriesType("dmi",e),e}),e(t,"masters/indicators/dmi.src.js",[],function(){})});