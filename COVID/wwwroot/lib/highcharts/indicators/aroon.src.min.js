"use strict";!function(o){"object"==typeof module&&module.exports?module.exports=o.default=o:"function"==typeof define&&define.amd?define("highcharts/indicators/aroon",["highcharts","highcharts/modules/stock"],function(t){return o(t),o.Highcharts=t,o}):o("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(t){t=t?t._modules:{};function o(t,o,n,e){t.hasOwnProperty(o)||(t[o]=e.apply(null,n))}o(t,"Mixins/MultipleLines.js",[t["Core/Globals.js"],t["Core/Utilities.js"]],function(t,o){var u=o.defined,c=o.error,h=o.merge,f=t.seriesTypes.sma;return{pointArrayMap:["top","bottom"],pointValKey:"top",linesApiNames:["bottomLine"],getTranslatedLinesNames:function(o){var n=[];return(this.pointArrayMap||[]).forEach(function(t){t!==o&&n.push("plot"+t.charAt(0).toUpperCase()+t.slice(1))}),n},toYData:function(o){var n=[];return(this.pointArrayMap||[]).forEach(function(t){n.push(o[t])}),n},translate:function(){var e,r=this,t=r.pointArrayMap,a=r.getTranslatedLinesNames();f.prototype.translate.apply(r,arguments),r.points.forEach(function(n){t.forEach(function(t,o){null!==(e=n[t])&&(n[a[o]]=r.yAxis.toPixels(e,!0))})})},drawGraph:function(){var n,e=this,t=e.pointValKey,o=e.linesApiNames,r=e.points,a=r.length,i=e.options,s=e.graph,p={options:{gapSize:i.gapSize}},l=[];e.getTranslatedLinesNames(t).forEach(function(t,o){for(l[o]=[];a--;)n=r[a],l[o].push({x:n.x,plotX:n.plotX,plotY:n[t],isNull:!u(n[t])});a=r.length}),o.forEach(function(t,o){l[o]?(e.points=l[o],i[t]?e.options=h(i[t].styles,p):c('Error: "There is no '+t+' in DOCS options declared. Check if linesApiNames are consistent with your DOCS line names." at mixin/multiple-line.js:34'),e.graph=e["graph"+t],f.prototype.drawGraph.call(e),e["graph"+t]=e.graph):c('Error: "'+t+" doesn't have equivalent in pointArrayMap. To many elements in linesApiNames relative to pointArrayMap.\"")}),e.points=r,e.options=i,e.graph=s,f.prototype.drawGraph.call(e)}}}),o(t,"Stock/Indicators/Aroon/AroonIndicator.js",[t["Mixins/MultipleLines.js"],t["Core/Series/SeriesRegistry.js"],t["Core/Utilities.js"]],function(t,o,n){var e,r=this&&this.__extends||(e=function(t,o){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,o){t.__proto__=o}||function(t,o){for(var n in o)o.hasOwnProperty(n)&&(t[n]=o[n])})(t,o)},function(t,o){function n(){this.constructor=t}e(t,o),t.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}),a=o.seriesTypes.sma,i=n.extend,s=n.merge,h=n.pick;function f(t,o){for(var n=t[0],e=0,r=1;r<t.length;r++)("max"===o&&t[r]>=n||"min"===o&&t[r]<=n)&&(n=t[r],e=r);return e}var p,a=(r(l,p=a),l.prototype.getValues=function(t,o){for(var n,e,r=o.period,a=t.xData,i=t.yData,s=i?i.length:0,p=[],l=[],u=[],c=r-1;c<s;c++)e=f((n=i.slice(c-r+1,c+2)).map(function(t){return h(t[2],t)}),"min"),n=f(n.map(function(t){return h(t[1],t)}),"max")/r*100,e=e/r*100,a[c+1]&&(p.push([a[c+1],n,e]),l.push(a[c+1]),u.push([n,e]));return{values:p,xData:l,yData:u}},l.defaultOptions=s(a.defaultOptions,{params:{index:void 0,period:25},marker:{enabled:!1},tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span><b> {series.name}</b><br/>Aroon Up: {point.y}<br/>Aroon Down: {point.aroonDown}<br/>'},aroonDown:{styles:{lineWidth:1,lineColor:void 0}},dataGrouping:{approximation:"averages"}}),l);function l(){var t=null!==p&&p.apply(this,arguments)||this;return t.data=void 0,t.options=void 0,t.points=void 0,t}return i(a.prototype,{linesApiNames:["aroonDown"],nameBase:"Aroon",pointArrayMap:["y","aroonDown"],pointValKey:"y",drawGraph:t.drawGraph,getTranslatedLinesNames:t.getTranslatedLinesNames,toYData:t.toYData,translate:t.translate}),o.registerSeriesType("aroon",a),a}),o(t,"masters/indicators/aroon.src.js",[],function(){})});