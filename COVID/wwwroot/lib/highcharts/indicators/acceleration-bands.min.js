"use strict";!function(e){"object"==typeof module&&module.exports?module.exports=e.default=e:"function"==typeof define&&define.amd?define("highcharts/indicators/acceleration-bands",["highcharts","highcharts/modules/stock"],function(t){return e(t),e.Highcharts=t,e}):e("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(t){function e(t,e,a,o){t.hasOwnProperty(e)||(t[e]=o.apply(null,a))}e(t=t?t._modules:{},"Mixins/MultipleLines.js",[t["Core/Globals.js"],t["Core/Utilities.js"]],function(t,e){var l=e.defined,c=e.error,u=e.merge,h=t.seriesTypes.sma;return{pointArrayMap:["top","bottom"],pointValKey:"top",linesApiNames:["bottomLine"],getTranslatedLinesNames:function(e){var a=[];return(this.pointArrayMap||[]).forEach(function(t){t!==e&&a.push("plot"+t.charAt(0).toUpperCase()+t.slice(1))}),a},toYData:function(e){var a=[];return(this.pointArrayMap||[]).forEach(function(t){a.push(e[t])}),a},translate:function(){var o,i=this,t=i.pointArrayMap,n=i.getTranslatedLinesNames();h.prototype.translate.apply(i,arguments),i.points.forEach(function(a){t.forEach(function(t,e){null!==(o=a[t])&&(a[n[e]]=i.yAxis.toPixels(o,!0))})})},drawGraph:function(){var a,o=this,t=o.linesApiNames,i=o.points,n=i.length,r=o.options,e=o.graph,s={options:{gapSize:r.gapSize}},p=[];o.getTranslatedLinesNames(o.pointValKey).forEach(function(t,e){for(p[e]=[];n--;)a=i[n],p[e].push({x:a.x,plotX:a.plotX,plotY:a[t],isNull:!l(a[t])});n=i.length}),t.forEach(function(t,e){p[e]?(o.points=p[e],r[t]?o.options=u(r[t].styles,s):c('Error: "There is no '+t+' in DOCS options declared. Check if linesApiNames are consistent with your DOCS line names." at mixin/multiple-line.js:34'),o.graph=o["graph"+t],h.prototype.drawGraph.call(o),o["graph"+t]=o.graph):c('Error: "'+t+" doesn't have equivalent in pointArrayMap. To many elements in linesApiNames relative to pointArrayMap.\"")}),o.points=i,o.options=r,o.graph=e,h.prototype.drawGraph.call(o)}}}),e(t,"Stock/Indicators/ABands/ABandsIndicator.js",[t["Mixins/MultipleLines.js"],t["Core/Series/SeriesRegistry.js"],t["Core/Utilities.js"]],function(t,e,a){var o,m,i=this&&this.__extends||(o=function(t,e){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var a in e)e.hasOwnProperty(a)&&(t[a]=e[a])})(t,e)},function(t,e){function a(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(a.prototype=e.prototype,new a)}),n=e.seriesTypes.sma,g=a.correctFloat,r=a.extend,s=a.merge;function p(){var t=null!==m&&m.apply(this,arguments)||this;return t.data=void 0,t.options=void 0,t.points=void 0,t}return i(p,m=n),p.prototype.getValues=function(t,e){var a=e.period,o=e.factor;e=e.index;var i,n,r,s,p,l=t.xData,c=(t=t.yData)?t.length:0,u=[],h=[],d=[],f=[],y=[];if(!(c<a)){for(i=0;i<=c;i++)i<c&&(n=t[i][2],s=t[i][1],r=o,n=g(s-n)/(g(s+n)/2)*1e3*r,u.push(t[i][1]*g(1+2*n)),h.push(t[i][2]*g(1-2*n))),a<=i&&(n=l.slice(i-a,i),p=t.slice(i-a,i),r=m.prototype.getValues.call(this,{xData:n,yData:u.slice(i-a,i)},{period:a}),s=m.prototype.getValues.call(this,{xData:n,yData:h.slice(i-a,i)},{period:a}),n=(p=m.prototype.getValues.call(this,{xData:n,yData:p},{period:a,index:e})).xData[0],r=r.yData[0],s=s.yData[0],p=p.yData[0],d.push([n,r,p,s]),f.push(n),y.push([r,p,s]));return{values:d,xData:f,yData:y}}},p.defaultOptions=s(n.defaultOptions,{params:{period:20,factor:.001,index:3},lineWidth:1,topLine:{styles:{lineWidth:1}},bottomLine:{styles:{lineWidth:1}},dataGrouping:{approximation:"averages"}}),r((a=p).prototype,{drawGraph:t.drawGraph,getTranslatedLinesNames:t.getTranslatedLinesNames,linesApiNames:["topLine","bottomLine"],nameBase:"Acceleration Bands",nameComponents:["period","factor"],pointArrayMap:["top","middle","bottom"],pointValKey:"middle",toYData:t.toYData,translate:t.translate}),e.registerSeriesType("abands",a),a}),e(t,"masters/indicators/acceleration-bands.src.js",[],function(){})});