"use strict";!function(e){"object"==typeof module&&module.exports?module.exports=e.default=e:"function"==typeof define&&define.amd?define("highcharts/indicators/bollinger-bands",["highcharts","highcharts/modules/stock"],function(t){return e(t),e.Highcharts=t,e}):e("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(t){function e(t,e,o,i){t.hasOwnProperty(e)||(t[e]=i.apply(null,o))}e(t=t?t._modules:{},"Mixins/MultipleLines.js",[t["Core/Globals.js"],t["Core/Utilities.js"]],function(t,e){var l=e.defined,h=e.error,c=e.merge,d=t.seriesTypes.sma;return{pointArrayMap:["top","bottom"],pointValKey:"top",linesApiNames:["bottomLine"],getTranslatedLinesNames:function(e){var o=[];return(this.pointArrayMap||[]).forEach(function(t){t!==e&&o.push("plot"+t.charAt(0).toUpperCase()+t.slice(1))}),o},toYData:function(e){var o=[];return(this.pointArrayMap||[]).forEach(function(t){o.push(e[t])}),o},translate:function(){var i,n=this,t=n.pointArrayMap,a=n.getTranslatedLinesNames();d.prototype.translate.apply(n,arguments),n.points.forEach(function(o){t.forEach(function(t,e){null!==(i=o[t])&&(o[a[e]]=n.yAxis.toPixels(i,!0))})})},drawGraph:function(){var o,i=this,t=i.linesApiNames,n=i.points,a=n.length,r=i.options,e=i.graph,s={options:{gapSize:r.gapSize}},p=[];i.getTranslatedLinesNames(i.pointValKey).forEach(function(t,e){for(p[e]=[];a--;)o=n[a],p[e].push({x:o.x,plotX:o.plotX,plotY:o[t],isNull:!l(o[t])});a=n.length}),t.forEach(function(t,e){p[e]?(i.points=p[e],r[t]?i.options=c(r[t].styles,s):h('Error: "There is no '+t+' in DOCS options declared. Check if linesApiNames are consistent with your DOCS line names." at mixin/multiple-line.js:34'),i.graph=i["graph"+t],d.prototype.drawGraph.call(i),i["graph"+t]=i.graph):h('Error: "'+t+" doesn't have equivalent in pointArrayMap. To many elements in linesApiNames relative to pointArrayMap.\"")}),i.points=n,i.options=r,i.graph=e,d.prototype.drawGraph.call(i)}}}),e(t,"Stock/Indicators/BB/BBIndicator.js",[t["Mixins/MultipleLines.js"],t["Core/Series/SeriesRegistry.js"],t["Core/Utilities.js"]],function(t,v,e){var i,o,n=this&&this.__extends||(i=function(t,e){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)e.hasOwnProperty(o)&&(t[o]=e[o])})(t,e)},function(t,e){function o(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(o.prototype=e.prototype,new o)}),a=v.seriesTypes.sma,r=e.extend,b=e.isArray,s=e.merge;function p(){var t=null!==o&&o.apply(this,arguments)||this;return t.data=void 0,t.options=void 0,t.points=void 0,t}return n(p,o=a),p.prototype.init=function(){v.seriesTypes.sma.prototype.init.apply(this,arguments),this.options=s({topLine:{styles:{lineColor:this.color}},bottomLine:{styles:{lineColor:this.color}}},this.options)},p.prototype.getValues=function(t,e){var o=e.period,i=e.standardDeviation,n=t.xData,a=(t=t.yData)?t.length:0,r=[],s=[],p=[];if(!(n.length<o)){for(var l=b(t[0]),h=o;h<=a;h++){for(var c=n.slice(h-o,h),d=t.slice(h-o,h),c=(u=v.seriesTypes.sma.prototype.getValues.call(this,{xData:c,yData:d},e)).xData[0],u=u.yData[0],y=0,f=d.length,m=0;m<f;m++){var g=(l?d[m][e.index]:d[m])-u;y+=g*g}g=Math.sqrt(y/(f-1)),r.push([c,d=u+i*g,u,g=u-i*g]),s.push(c),p.push([d,u,g])}return{values:r,xData:s,yData:p}}},p.defaultOptions=s(a.defaultOptions,{params:{period:20,standardDeviation:2,index:3},bottomLine:{styles:{lineWidth:1,lineColor:void 0}},topLine:{styles:{lineWidth:1,lineColor:void 0}},tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span><b> {series.name}</b><br/>Top: {point.top}<br/>Middle: {point.middle}<br/>Bottom: {point.bottom}<br/>'},marker:{enabled:!1},dataGrouping:{approximation:"averages"}}),r((e=p).prototype,{pointArrayMap:["top","middle","bottom"],pointValKey:"middle",nameComponents:["period","standardDeviation"],linesApiNames:["topLine","bottomLine"],drawGraph:t.drawGraph,getTranslatedLinesNames:t.getTranslatedLinesNames,translate:t.translate,toYData:t.toYData}),v.registerSeriesType("bb",e),e}),e(t,"masters/indicators/bollinger-bands.src.js",[],function(){})});