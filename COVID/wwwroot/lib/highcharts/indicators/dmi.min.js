"use strict";!function(e){"object"==typeof module&&module.exports?module.exports=e.default=e:"function"==typeof define&&define.amd?define("highcharts/indicators/dmi",["highcharts","highcharts/modules/stock"],function(t){return e(t),e.Highcharts=t,e}):e("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(t){function e(t,e,o,a){t.hasOwnProperty(e)||(t[e]=a.apply(null,o))}e(t=t?t._modules:{},"Mixins/MultipleLines.js",[t["Core/Globals.js"],t["Core/Utilities.js"]],function(t,e){var l=e.defined,u=e.error,c=e.merge,h=t.seriesTypes.sma;return{pointArrayMap:["top","bottom"],pointValKey:"top",linesApiNames:["bottomLine"],getTranslatedLinesNames:function(e){var o=[];return(this.pointArrayMap||[]).forEach(function(t){t!==e&&o.push("plot"+t.charAt(0).toUpperCase()+t.slice(1))}),o},toYData:function(e){var o=[];return(this.pointArrayMap||[]).forEach(function(t){o.push(e[t])}),o},translate:function(){var a,n=this,t=n.pointArrayMap,i=n.getTranslatedLinesNames();h.prototype.translate.apply(n,arguments),n.points.forEach(function(o){t.forEach(function(t,e){null!==(a=o[t])&&(o[i[e]]=n.yAxis.toPixels(a,!0))})})},drawGraph:function(){var o,a=this,t=a.linesApiNames,n=a.points,i=n.length,s=a.options,e=a.graph,r={options:{gapSize:s.gapSize}},p=[];a.getTranslatedLinesNames(a.pointValKey).forEach(function(t,e){for(p[e]=[];i--;)o=n[i],p[e].push({x:o.x,plotX:o.plotX,plotY:o[t],isNull:!l(o[t])});i=n.length}),t.forEach(function(t,e){p[e]?(a.points=p[e],s[t]?a.options=c(s[t].styles,r):u('Error: "There is no '+t+' in DOCS options declared. Check if linesApiNames are consistent with your DOCS line names." at mixin/multiple-line.js:34'),a.graph=a["graph"+t],h.prototype.drawGraph.call(a),a["graph"+t]=a.graph):u('Error: "'+t+" doesn't have equivalent in pointArrayMap. To many elements in linesApiNames relative to pointArrayMap.\"")}),a.points=n,a.options=s,a.graph=e,h.prototype.drawGraph.call(a)}}}),e(t,"Stock/Indicators/DMI/DMIIndicator.js",[t["Mixins/MultipleLines.js"],t["Core/Color/Palette.js"],t["Core/Series/SeriesRegistry.js"],t["Core/Utilities.js"]],function(t,e,o,a){var n,i,s=this&&this.__extends||(n=function(t,e){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)e.hasOwnProperty(o)&&(t[o]=e[o])})(t,e)},function(t,e){function o(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(o.prototype=e.prototype,new o)}),r=o.seriesTypes.sma,p=a.correctFloat,l=a.extend,f=a.isArray,u=a.merge;function c(){return null!==i&&i.apply(this,arguments)||this}return s(c,i=r),c.prototype.calculateDM=function(t,e,o){var a=t[e][1],n=t[e][2],i=t[e-1][1];return t=t[e-1][2],p(t-n<a-i?o?Math.max(a-i,0):0:o?0:Math.max(t-n,0))},c.prototype.calculateDI=function(t,e){return t/e*100},c.prototype.calculateDX=function(t,e){return p(Math.abs(t-e)/Math.abs(t+e)*100)},c.prototype.smoothValues=function(t,e,o){return p(t-t/o+e)},c.prototype.getTR=function(t,e){return p(Math.max(t[1]-t[2],e?Math.abs(t[1]-e[3]):0,e?Math.abs(t[2]-e[3]):0))},c.prototype.getValues=function(t,e){e=e.period;var o=t.xData,a=(t=t.yData)?t.length:0,n=[],i=[],s=[];if(!(o.length<=e)&&f(t[0])&&4===t[0].length){for(var r,p,l,u=0,c=0,h=0,y=1;y<a;y++)y<=e?(u+=r=this.calculateDM(t,y,!0),c+=p=this.calculateDM(t,y),h+=l=this.getTR(t[y],t[y-1]),y===e&&(l=this.calculateDI(u,h),p=this.calculateDI(c,h),r=this.calculateDX(u,c),n.push([o[y],r,l,p]),i.push(o[y]),s.push([r,l,p]))):(r=this.calculateDM(t,y,!0),p=this.calculateDM(t,y),l=this.getTR(t[y],t[y-1]),u=this.smoothValues(u,r,e),c=this.smoothValues(c,p,e),h=this.smoothValues(h,l,e),l=this.calculateDI(u,h),p=this.calculateDI(c,h),r=this.calculateDX(u,c),n.push([o[y],r,l,p]),i.push(o[y]),s.push([r,l,p]));return{values:n,xData:i,yData:s}}},c.defaultOptions=u(r.defaultOptions,{params:{index:void 0},marker:{enabled:!1},tooltip:{pointFormat:'<span style="color: {point.color}">‚óè</span><b> {series.name}</b><br/><span style="color: {point.color}">DX</span>: {point.y}<br/><span style="color: {point.series.options.plusDILine.styles.lineColor}">+DI</span>: {point.plusDI}<br/><span style="color: {point.series.options.minusDILine.styles.lineColor}">-DI</span>: {point.minusDI}<br/>'},plusDILine:{styles:{lineWidth:1,lineColor:e.positiveColor}},minusDILine:{styles:{lineWidth:1,lineColor:e.negativeColor}},dataGrouping:{approximation:"averages"}}),l((a=c).prototype,{nameBase:"DMI",pointArrayMap:["y","plusDI","minusDI"],parallelArrays:["x","y","plusDI","minusDI"],pointValKey:"y",linesApiNames:["plusDILine","minusDILine"],drawGraph:t.drawGraph,getTranslatedLinesNames:t.getTranslatedLinesNames,translate:t.translate,toYData:t.toYData}),o.registerSeriesType("dmi",a),a}),e(t,"masters/indicators/dmi.src.js",[],function(){})});