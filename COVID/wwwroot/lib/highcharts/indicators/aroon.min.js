"use strict";!function(o){"object"==typeof module&&module.exports?module.exports=o.default=o:"function"==typeof define&&define.amd?define("highcharts/indicators/aroon",["highcharts","highcharts/modules/stock"],function(t){return o(t),o.Highcharts=t,o}):o("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(t){function o(t,o,n,e){t.hasOwnProperty(o)||(t[o]=e.apply(null,n))}o(t=t?t._modules:{},"Mixins/MultipleLines.js",[t["Core/Globals.js"],t["Core/Utilities.js"]],function(t,o){var l=o.defined,u=o.error,c=o.merge,h=t.seriesTypes.sma;return{pointArrayMap:["top","bottom"],pointValKey:"top",linesApiNames:["bottomLine"],getTranslatedLinesNames:function(o){var n=[];return(this.pointArrayMap||[]).forEach(function(t){t!==o&&n.push("plot"+t.charAt(0).toUpperCase()+t.slice(1))}),n},toYData:function(o){var n=[];return(this.pointArrayMap||[]).forEach(function(t){n.push(o[t])}),n},translate:function(){var e,r=this,t=r.pointArrayMap,a=r.getTranslatedLinesNames();h.prototype.translate.apply(r,arguments),r.points.forEach(function(n){t.forEach(function(t,o){null!==(e=n[t])&&(n[a[o]]=r.yAxis.toPixels(e,!0))})})},drawGraph:function(){var n,e=this,t=e.linesApiNames,r=e.points,a=r.length,i=e.options,o=e.graph,s={options:{gapSize:i.gapSize}},p=[];e.getTranslatedLinesNames(e.pointValKey).forEach(function(t,o){for(p[o]=[];a--;)n=r[a],p[o].push({x:n.x,plotX:n.plotX,plotY:n[t],isNull:!l(n[t])});a=r.length}),t.forEach(function(t,o){p[o]?(e.points=p[o],i[t]?e.options=c(i[t].styles,s):u('Error: "There is no '+t+' in DOCS options declared. Check if linesApiNames are consistent with your DOCS line names." at mixin/multiple-line.js:34'),e.graph=e["graph"+t],h.prototype.drawGraph.call(e),e["graph"+t]=e.graph):u('Error: "'+t+" doesn't have equivalent in pointArrayMap. To many elements in linesApiNames relative to pointArrayMap.\"")}),e.points=r,e.options=i,e.graph=o,h.prototype.drawGraph.call(e)}}}),o(t,"Stock/Indicators/Aroon/AroonIndicator.js",[t["Mixins/MultipleLines.js"],t["Core/Series/SeriesRegistry.js"],t["Core/Utilities.js"]],function(t,o,n){function u(t,o){for(var n=t[0],e=0,r=1;r<t.length;r++)("max"===o&&t[r]>=n||"min"===o&&t[r]<=n)&&(n=t[r],e=r);return e}var e,r,a=this&&this.__extends||(e=function(t,o){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,o){t.__proto__=o}||function(t,o){for(var n in o)o.hasOwnProperty(n)&&(t[n]=o[n])})(t,o)},function(t,o){function n(){this.constructor=t}e(t,o),t.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}),i=o.seriesTypes.sma,s=n.extend,p=n.merge,c=n.pick;function l(){var t=null!==r&&r.apply(this,arguments)||this;return t.data=void 0,t.options=void 0,t.points=void 0,t}return a(l,r=i),l.prototype.getValues=function(t,o){o=o.period;for(var n=t.xData,e=(t=t.yData)?t.length:0,r=[],a=[],i=[],s=o-1;s<e;s++){var p=t.slice(s-o+1,s+2),l=u(p.map(function(t){return c(t[2],t)}),"min");p=(p=u(p.map(function(t){return c(t[1],t)}),"max"))/o*100,l=l/o*100,n[s+1]&&(r.push([n[s+1],p,l]),a.push(n[s+1]),i.push([p,l]))}return{values:r,xData:a,yData:i}},l.defaultOptions=p(i.defaultOptions,{params:{index:void 0,period:25},marker:{enabled:!1},tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span><b> {series.name}</b><br/>Aroon Up: {point.y}<br/>Aroon Down: {point.aroonDown}<br/>'},aroonDown:{styles:{lineWidth:1,lineColor:void 0}},dataGrouping:{approximation:"averages"}}),s((n=l).prototype,{linesApiNames:["aroonDown"],nameBase:"Aroon",pointArrayMap:["y","aroonDown"],pointValKey:"y",drawGraph:t.drawGraph,getTranslatedLinesNames:t.getTranslatedLinesNames,toYData:t.toYData,translate:t.translate}),o.registerSeriesType("aroon",n),n}),o(t,"masters/indicators/aroon.src.js",[],function(){})});