import H from"../Core/Globals.js";import U from"../Core/Utilities.js";var find=U.find,isArray=U.isArray,isNumber=U.isNumber,deg2rad=H.deg2rad,correctFloat=function(o,t){t=isNumber(t)?t:14,t=Math.pow(10,t);return Math.round(o*t)/t},getNormals=function(o,t){var n=t[0]-o[0],o=t[1]-o[1];return[[-o,n],[o,-n]]},dotProduct=function(o,t){var n=o[0],o=o[1];return n*t[0]+o*t[1]},project=function(o,t){o=o.map(function(o){return dotProduct(o,t)});return{min:Math.min.apply(this,o),max:Math.max.apply(this,o)}},rotate2DToOrigin=function(o,t){var n=o[0],r=o[1],o=deg2rad*-t,t=Math.cos(o),o=Math.sin(o);return[correctFloat(n*t-r*o),correctFloat(n*o+r*t)]},rotate2DToPoint=function(o,t,n){var r=o[0]-t[0],o=o[1]-t[1],n=rotate2DToOrigin([r,o],n);return[n[0]+t[0],n[1]+t[1]]},isAxesEqual=function(o,t){return o[0]===t[0]&&o[1]===t[1]},getAxesFromPolygon=function(o){var r=o.axes;return isArray(r)||(r=[],o.concat([o[0]]).reduce(function(o,t){var n=getNormals(o,t)[0];return find(r,function(o){return isAxesEqual(o,n)})||r.push(n),t}),o.axes=r),r},getAxes=function(o,t){o=getAxesFromPolygon(o),t=getAxesFromPolygon(t);return o.concat(t)},getPolygon=function(o,t,n,r,e){var i=[o,t],u=o-n/2,o=o+n/2,n=t-r/2,r=t+r/2;return[[u,n],[o,n],[o,r],[u,r]].map(function(o){return rotate2DToPoint(o,i,-e)})},getBoundingBoxFromPolygon=function(o){return o.reduce(function(o,t){var n=t[0],t=t[1];return o.left=Math.min(n,o.left),o.right=Math.max(n,o.right),o.bottom=Math.max(t,o.bottom),o.top=Math.min(t,o.top),o},{left:Number.MAX_VALUE,right:-Number.MAX_VALUE,bottom:-Number.MAX_VALUE,top:Number.MAX_VALUE})},isPolygonsOverlappingOnAxis=function(o,t,n){t=project(t,o),o=project(n,o);return!!(o.min>t.max||o.max<t.min)},isPolygonsColliding=function(t,n){var o=getAxes(t,n);return!find(o,function(o){return isPolygonsOverlappingOnAxis(o,t,n)})},movePolygon=function(t,n,o){return o.map(function(o){return[o[0]+t,o[1]+n]})},collision={getBoundingBoxFromPolygon:getBoundingBoxFromPolygon,getPolygon:getPolygon,isPolygonsColliding:isPolygonsColliding,movePolygon:movePolygon,rotate2DToOrigin:rotate2DToOrigin,rotate2DToPoint:rotate2DToPoint};export default collision;