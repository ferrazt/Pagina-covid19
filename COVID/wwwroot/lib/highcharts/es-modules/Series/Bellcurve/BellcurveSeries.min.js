"use strict";var __extends=this&&this.__extends||function(){var i=function(e,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)};return function(e,t){function r(){this.constructor=e}i(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}}();import DerivedSeriesMixin from"../../Mixins/DerivedSeries.js";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";var AreaSplineSeries=SeriesRegistry.seriesTypes.areaspline;import U from"../../Core/Utilities.js";var correctFloat=U.correctFloat,extend=U.extend,isNumber=U.isNumber,merge=U.merge,BellcurveSeries=function(t){function u(){var e=null!==t&&t.apply(this,arguments)||this;return e.data=void 0,e.options=void 0,e.points=void 0,e}return __extends(u,t),u.mean=function(e){var t=e.length,e=e.reduce(function(e,t){return e+t},0);return 0<t&&e/t},u.standardDeviation=function(e,r){var t=e.length;return r=isNumber(r)?r:u.mean(e),e=e.reduce(function(e,t){t-=r;return e+t*t},0),1<t&&Math.sqrt(e/(t-1))},u.normalDensity=function(e,t,r){t=e-t;return Math.exp(-t*t/(2*r*r))/(r*Math.sqrt(2*Math.PI))},u.prototype.derivedData=function(e,t){for(var r=this.options.intervals,i=this.options.pointsInInterval,n=e-r*t,s=r*i*2+1,a=t/i,o=[],d=0;d<s;d++)o.push([n,u.normalDensity(n,e,t)]),n+=a;return o},u.prototype.setDerivedData=function(){1<this.baseSeries.yData.length&&(this.setMean(),this.setStandardDeviation(),this.setData(this.derivedData(this.mean,this.standardDeviation),!1))},u.prototype.setMean=function(){this.mean=correctFloat(u.mean(this.baseSeries.yData))},u.prototype.setStandardDeviation=function(){this.standardDeviation=correctFloat(u.standardDeviation(this.baseSeries.yData,this.mean))},u.defaultOptions=merge(AreaSplineSeries.defaultOptions,{intervals:3,pointsInInterval:3,marker:{enabled:!1}}),u}(AreaSplineSeries);extend(BellcurveSeries.prototype,{addBaseSeriesEvents:DerivedSeriesMixin.addBaseSeriesEvents,addEvents:DerivedSeriesMixin.addEvents,destroy:DerivedSeriesMixin.destroy,init:DerivedSeriesMixin.init,setBaseSeries:DerivedSeriesMixin.setBaseSeries}),SeriesRegistry.registerSeriesType("bellcurve",BellcurveSeries);export default BellcurveSeries;