"use strict";var __extends=this&&this.__extends||function(){var i=function(t,o){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,o){t.__proto__=o}||function(t,o){for(var e in o)o.hasOwnProperty(e)&&(t[e]=o[e])})(t,o)};return function(t,o){function e(){this.constructor=t}i(t,o),t.prototype=null===o?Object.create(o):(e.prototype=o.prototype,new e)}}();import Color from"../../Core/Color/Color.js";import H from"../../Core/Globals.js";import NodesMixin from"../../Mixins/Nodes.js";import SankeyPoint from"./SankeyPoint.js";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";var Series=SeriesRegistry.series,ColumnSeries=SeriesRegistry.seriesTypes.column;import TreeSeriesMixin from"../../Mixins/TreeSeries.js";var getLevelOptions=TreeSeriesMixin.getLevelOptions;import U from"../../Core/Utilities.js";var defined=U.defined,extend=U.extend,find=U.find,isObject=U.isObject,merge=U.merge,pick=U.pick,relativeLength=U.relativeLength,stableSort=U.stableSort,SankeySeries=function(o){function p(){var t=null!==o&&o.apply(this,arguments)||this;return t.colDistance=void 0,t.data=void 0,t.group=void 0,t.nodeLookup=void 0,t.nodePadding=void 0,t.nodes=void 0,t.nodeWidth=void 0,t.options=void 0,t.points=void 0,t.translationFactor=void 0,t}return __extends(p,o),p.getDLOptions=function(t){var o=isObject(t.optionsPoint)?t.optionsPoint.dataLabels:{},t=isObject(t.level)?t.level.dataLabels:{};return merge({style:{}},t,o)},p.prototype.createNodeColumn=function(){var a=this,o=this.chart,l=[];return l.sum=function(){return this.reduce(function(t,o){return t+o.getSum()},0)},l.offset=function(t,o){for(var e=0,i=a.nodePadding,n=0;n<l.length;n++){var r=l[n].getSum(),s=Math.max(r*o,a.options.minLinkWidth),s=r?s+i:0;if(l[n]===t)return{relativeTop:e+relativeLength(t.options.offset||0,s)};e+=s}},l.top=function(e){var i=a.nodePadding,t=this.reduce(function(t,o){return 0<t&&(t+=i),t+=Math.max(o.getSum()*e,a.options.minLinkWidth)},0);return(o.plotSizeY-t)/2},l},p.prototype.createNodeColumns=function(){var r=[];this.nodes.forEach(function(e){var t,i,o,n=-1;if(!defined(e.options.column))if(0===e.linksTo.length)e.column=0;else{for(i=0;i<e.linksTo.length;i++)(o=e.linksTo[0]).fromNode.column>n&&(n=(t=o.fromNode).column);e.column=n+1,t&&"hanging"===t.options.layout&&(e.hangsFrom=t,i=-1,find(t.linksFrom,function(t,o){t=t.toNode===e;return t&&(i=o),t}),e.column+=i)}r[e.column]||(r[e.column]=this.createNodeColumn()),r[e.column].push(e)},this);for(var t=0;t<r.length;t++)void 0===r[t]&&(r[t]=this.createNodeColumn());return r},p.prototype.generatePoints=function(){NodesMixin.generatePoints.apply(this,arguments),this.orderNodes&&(this.nodes.filter(function(t){return 0===t.linksTo.length}).forEach(function(t){!function o(t,e){void 0===t.level&&(t.level=e,t.linksFrom.forEach(function(t){t.toNode&&o(t.toNode,e+1)}))}(t,0)}),stableSort(this.nodes,function(t,o){return t.level-o.level}))},p.prototype.getNodePadding=function(){var t,o=this.options.nodePadding||0;return!this.nodeColumns||(t=this.nodeColumns.reduce(function(t,o){return Math.max(t,o.length)},0))*o>this.chart.plotSizeY&&(o=this.chart.plotSizeY/t),o},p.prototype.hasData=function(){return!!this.processedXData.length},p.prototype.pointAttribs=function(t,o){if(!t)return{};var e=this,i=(t.isNode?t:t.fromNode).level,n=e.mapOptionsToLevel[i||0]||{},r=t.options,s=n.states&&n.states[o||""]||{},i=["colorByPoint","borderColor","borderWidth","linkOpacity"].reduce(function(t,o){return t[o]=pick(s[o],r[o],n[o],e.options[o]),t},{}),o=pick(s.color,r.color,(i.colorByPoint?t:n).color);return t.isNode?{fill:o,stroke:i.borderColor,"stroke-width":i.borderWidth}:{fill:Color.parse(o).setOpacity(i.linkOpacity).get()}},p.prototype.render=function(){var t=this.points;this.points=this.points.concat(this.nodes||[]),ColumnSeries.prototype.render.call(this),this.points=t},p.prototype.translate=function(){var a=this;this.processedXData||this.processData(),this.generatePoints(),this.nodeColumns=this.createNodeColumns(),this.nodeWidth=relativeLength(this.options.nodeWidth,this.chart.plotSizeX);var l=this,d=this.chart,h=this.options,t=this.nodeWidth,o=this.nodeColumns;this.nodePadding=this.getNodePadding(),this.translationFactor=o.reduce(function(t,o){return Math.min(t,function(o){for(var t,e,i=o.slice(),n=a.options.minLinkWidth||0,r=0,s=d.plotSizeY-h.borderWidth-(o.length-1)*l.nodePadding;o.length;){for(r=s/o.sum(),t=!1,e=o.length;e--;)o[e].getSum()*r<n&&(o.splice(e,1),s-=n,t=!0);if(!t)break}return o.length=0,i.forEach(function(t){return o.push(t)}),r}(o))},1/0),this.colDistance=(d.plotSizeX-t-h.borderWidth)/Math.max(1,o.length-1),l.mapOptionsToLevel=getLevelOptions({from:1,levels:h.levels,to:o.length-1,defaults:{borderColor:h.borderColor,borderRadius:h.borderRadius,borderWidth:h.borderWidth,color:l.color,colorByPoint:h.colorByPoint,levelIsConstant:!0,linkColor:h.linkColor,linkLineWidth:h.linkLineWidth,linkOpacity:h.linkOpacity,states:h.states}}),o.forEach(function(o){o.forEach(function(t){l.translateNode(t,o)})},this),this.nodes.forEach(function(t){t.linksFrom.forEach(function(t){(t.weight||t.isNull)&&t.to&&(l.translateLink(t),t.allowShadow=!1)})})},p.prototype.translateLink=function(e){var t,o,i,n,r,s,a,l,d,h,p,c,u=function(t,o){o=t.offset(e,o)*v;return Math.min(t.nodeY+o,t.nodeY+(t.shapeArgs&&t.shapeArgs.height||0)-y)},f=e.fromNode,m=e.toNode,g=this.chart,v=this.translationFactor,y=Math.max(e.weight*v,this.options.minLinkWidth),S=this.options,k=(g.inverted?-this.colDistance:this.colDistance)*S.curveFactor,b=u(f,"linksFrom"),C=u(m,"linksTo"),L=f.nodeX,x=this.nodeWidth,N=m.column*this.colDistance,P=e.outgoing,O=L+x<N;g.inverted&&(b=g.plotSizeY-b,C=(g.plotSizeY||0)-C,N=g.plotSizeX-N,x=-x,y=-y,O=N<L),e.shapeType="path",e.linkBase=[b,b+y,C,C+y],O&&"number"==typeof C?e.shapeArgs={d:[["M",L+x,b],["C",L+x+k,b,N-k,C,N,C],["L",N+(P?x:0),C+y/2],["L",N,C+y],["C",N-k,C+y,L+x+k,b+y,L+x,b+y],["Z"]]}:"number"==typeof C&&(c=g.plotHeight-b-y,t=N-20-y,n=(i=(o=L+x)+20)+y,h=(d=(l=(a=(s=(r=b)+y)+20)+c)+20)+y,p=s-.7*y,S=d+.7*y,O=(m=(u=C)+y)-.7*y,k=(P=N)-.7*y,c=o+.7*y,e.shapeArgs={d:[["M",o,r],["C",c,r,n,p,n,a],["L",n,l],["C",n,S,c,h,o,h],["L",P,h],["C",k,h,t,S,t,l],["L",t,S=m+20],["C",t,O,k,u,P,u],["L",P,m],["C",u=N-20,m,u,m,u,S],["L",u,l],["C",u,d,u,d,P,d],["L",o,d],["C",i,d,i,d,i,l],["L",i,a],["C",i,s,i,s,o,s],["Z"]]}),e.dlBox={x:L+(N-L+x)/2,y:b+(C-b)/2,height:y,width:0},e.tooltipPos=g.inverted?[g.plotSizeY-e.dlBox.y-y/2,g.plotSizeX-e.dlBox.x]:[e.dlBox.x,e.dlBox.y+y/2],e.y=e.plotY=1,e.color||(e.color=f.color)},p.prototype.translateNode=function(t,o){var e=this.translationFactor,i=this.chart,n=this.options,r=t.getSum(),s=Math.max(Math.round(r*e),this.options.minLinkWidth),a=Math.round(n.borderWidth)%2/2,l=o.offset(t,e),d=Math.floor(pick(l.absoluteTop,o.top(e)+l.relativeTop))+a,h=Math.floor(this.colDistance*t.column+n.borderWidth/2)+a,o=i.inverted?i.plotSizeX-h:h,e=Math.round(this.nodeWidth);(t.sum=r)?(t.shapeType="rect",l=t.nodeX=o,a=t.nodeY=d,h=t.options.width||n.width||e,r=t.options.height||n.height||s,i.inverted&&(l=o-e,a=i.plotSizeY-d-s,h=t.options.height||n.height||e,r=t.options.width||n.width||s),t.dlOptions=p.getDLOptions({level:this.mapOptionsToLevel[t.level],optionsPoint:t.options}),t.plotX=1,t.plotY=1,t.tooltipPos=i.inverted?[i.plotSizeY-a-r/2,i.plotSizeX-l-h/2]:[l+h/2,a+r/2],t.shapeArgs={x:l,y:a,width:h,height:r,display:t.hasShape()?"":"none"}):t.dlOptions={enabled:!1}},p.defaultOptions=merge(ColumnSeries.defaultOptions,{borderWidth:0,colorByPoint:!0,curveFactor:.33,dataLabels:{enabled:!0,backgroundColor:"none",crop:!1,nodeFormat:void 0,nodeFormatter:function(){return this.point.name},format:void 0,formatter:function(){},inside:!0},inactiveOtherPoints:!0,linkOpacity:.5,minLinkWidth:0,nodeWidth:20,nodePadding:10,showInLegend:!1,states:{hover:{linkOpacity:1},inactive:{linkOpacity:.1,opacity:.1,animation:{duration:50}}},tooltip:{followPointer:!0,headerFormat:'<span style="font-size: 10px">{series.name}</span><br/>',pointFormat:"{point.fromNode.name} â†’ {point.toNode.name}: <b>{point.weight}</b><br/>",nodeFormat:"{point.name}: <b>{point.sum}</b><br/>"}}),p}(ColumnSeries);extend(SankeySeries.prototype,{animate:Series.prototype.animate,createNode:NodesMixin.createNode,destroy:NodesMixin.destroy,forceDL:!0,invertible:!0,isCartesian:!1,orderNodes:!0,pointArrayMap:["from","to"],pointClass:SankeyPoint,searchPoint:H.noop,setData:NodesMixin.setData}),SeriesRegistry.registerSeriesType("sankey",SankeySeries);export default SankeySeries;