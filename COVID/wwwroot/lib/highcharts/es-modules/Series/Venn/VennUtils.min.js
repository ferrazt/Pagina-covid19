import GeometryCirclesModule from"../../Mixins/GeometryCircles.js";var getAreaOfCircle=GeometryCirclesModule.getAreaOfCircle,getCircleCircleIntersection=GeometryCirclesModule.getCircleCircleIntersection,getOverlapBetweenCirclesByDistance=GeometryCirclesModule.getOverlapBetweenCircles,isPointInsideAllCircles=GeometryCirclesModule.isPointInsideAllCircles,isPointInsideCircle=GeometryCirclesModule.isPointInsideCircle,isPointOutsideAllCircles=GeometryCirclesModule.isPointOutsideAllCircles;import GeometryMixin from"../../Mixins/Geometry.js";import NelderMeadMixin from"../../Mixins/NelderMead.js";var getDistanceBetweenPoints=GeometryMixin.getDistanceBetweenPoints;import U from"../../Core/Utilities.js";var VennUtils,extend=U.extend,isArray=U.isArray,isNumber=U.isNumber,isObject=U.isObject,isString=U.isString;!function(e){function n(e){var t=e.filter(function(e){return 2===e.sets.length}).reduce(function(n,i){return i.sets.forEach(function(e,r,t){isObject(n[e])||(n[e]={overlapping:{},totalOverlap:0}),n[e].totalOverlap+=i.value,n[e].overlapping[t[1-r]]=i.value}),n},{});return e.filter(i).forEach(function(e){var r=t[e.sets[0]];extend(e,r)}),e}function c(e,r,t,n,i){var s,o,c=e(r),l=e(t),u=i||100,a=n||1e-10,f=t-r,d=1;if(t<=r)throw new Error("a must be smaller than b.");if(0<c*l)throw new Error("f(a) and f(b) must have opposite signs.");if(0===c)s=r;else if(0===l)s=t;else for(;d++<=u&&0!==o&&a<f;)0<c*(o=e(s=r+(f=(t-r)/2)))?r=s:t=s;return s}function d(r,t,n){var e=r+t,e=n<=0?e:getAreaOfCircle(r<t?r:t)<=n?0:c(function(e){e=getOverlapBetweenCirclesByDistance(r,t,e);return n-e},0,e);return e}function i(e){return isArray(e.sets)&&1===e.sets.length}function s(e){var t={};return isObject(e)&&isNumber(e.value)&&-1<e.value&&isArray(e.sets)&&0<e.sets.length&&!e.sets.some(function(e){var r=!1;return!t[e]&&isString(e)?t[e]=!0:r=!0,r})}function y(s,e){return e.reduce(function(e,r){var t,n,i=0;return 1<r.sets.length&&(n=r.value-(t=r.sets.map(function(e){return s[e]}),n=0,2===t.length&&(r=t[0],t=t[1],n=getOverlapBetweenCirclesByDistance(r.r,t.r,getDistanceBetweenPoints(r,t))),n),i=Math.round(n*n*1e11)/1e11),e+i},0)}function o(e,r){return r.totalOverlap-e.totalOverlap}e.geometry=GeometryMixin,e.geometryCircles=GeometryCirclesModule,e.nelderMead=NelderMeadMixin,e.addOverlapToSets=n,e.getDistanceBetweenCirclesByOverlap=d,e.getLabelWidth=function(i,s,e){var r=s.reduce(function(e,r){return Math.min(r.r,e)},1/0),o=e.filter(function(e){return!isPointInsideCircle(i,e)}),e=function(t,n){return c(function(e){var r={x:i.x+n*e,y:i.y},r=isPointInsideAllCircles(r,s)&&isPointOutsideAllCircles(r,o);return-(t-e)+(r?0:Number.MAX_VALUE)},0,t)};return 2*Math.min(e(r,-1),e(r,1))},e.getMarginFromCircles=function(t,e,r){return e=e.reduce(function(e,r){r=r.r-getDistanceBetweenPoints(t,r);return r<=e?r:e},Number.MAX_VALUE),e=r.reduce(function(e,r){r=getDistanceBetweenPoints(t,r)-r.r;return r<=e?r:e},e)},e.isSet=i,e.layoutGreedyVenn=function(e){var u=[],a={};function t(e,r){var t=e.circle;t.x=r.x,t.y=r.y,u.push(e)}e.filter(function(e){return 1===e.sets.length}).forEach(function(e){a[e.sets[0]]=e.circle={x:Number.MAX_VALUE,y:Number.MAX_VALUE,r:Math.sqrt(e.value/Math.PI)}}),n(e);var r=e.filter(i).sort(o);t(r.shift(),{x:0,y:0});var f=e.filter(function(e){return 2===e.sets.length});return r.forEach(function(e){var o=e.circle,c=o.r,l=e.overlapping,r=u.reduce(function(t,e,r){var n=e.circle,e=l[e.sets[0]],i=d(c,n.r,e),s=[{x:n.x+i,y:n.y},{x:n.x-i,y:n.y},{x:n.x,y:n.y+i},{x:n.x,y:n.y-i}];return u.slice(r+1).forEach(function(e){var r=e.circle,e=l[e.sets[0]],e=d(c,r.r,e);s=s.concat(getCircleCircleIntersection({x:n.x,y:n.y,r:i},{x:r.x,y:r.y,r:e}))}),s.forEach(function(e){o.x=e.x,o.y=e.y;var r=y(a,f);r<t.loss&&(t.loss=r,t.coordinates=e)}),t},{loss:Number.MAX_VALUE,coordinates:void 0});t(e,r.coordinates)}),a},e.loss=y,e.processVennData=function(e){var t=(e=isArray(e)?e:[]).reduce(function(e,r){var t;return s(t=r)&&i(t)&&0<t.value&&-1===e.indexOf(r.sets[0])&&e.push(r.sets[0]),e},[]).sort(),n=e.reduce(function(e,r){return s(r)&&!r.sets.some(function(e){return-1===t.indexOf(e)})&&(e[r.sets.sort().join()]=r),e},{});return t.reduce(function(r,t,e,n){return n.slice(e+1).forEach(function(e){r.push(t+","+e)}),r},[]).forEach(function(e){var r;n[e]||(r={sets:e.split(","),value:0},n[e]=r)}),Object.keys(n).map(function(e){return n[e]})},e.sortByTotalOverlap=o}(VennUtils=VennUtils||{});export default VennUtils;