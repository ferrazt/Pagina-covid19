"use strict";import musicalFrequencies from"./MusicalFrequencies.js";import U from"../../Core/Utilities.js";var clamp=U.clamp;function SignalHandler(i){this.init(i||[])}SignalHandler.prototype.init=function(i){this.supportedSignals=i,this.signals={}},SignalHandler.prototype.registerSignalCallbacks=function(a){var t=this;t.supportedSignals.forEach(function(i){var n=a[i];n&&(t.signals[i]=t.signals[i]||[]).push(n)})},SignalHandler.prototype.clearSignalCallbacks=function(i){var n=this;i?i.forEach(function(i){n.signals[i]&&delete n.signals[i]}):n.signals={}},SignalHandler.prototype.emitSignal=function(i,n){var a;return this.signals[i]&&this.signals[i].forEach(function(i){i=i(n);a=void 0!==i?i:a}),a};var utilities={musicalFrequencies:musicalFrequencies,SignalHandler:SignalHandler,getMusicalScale:function(t){return musicalFrequencies.filter(function(i,n){var a=n%12+1;return t.some(function(i){return i===a})})},calculateDataExtremes:function(i,a){return i.series.reduce(function(n,i){return i.points.forEach(function(i){i=(void 0!==i[a]?i:i.options)[a];n.min=Math.min(n.min,i),n.max=Math.max(n.max,i)}),n},{min:1/0,max:-1/0})},virtualAxisTranslate:function(i,n,a,t){var e=n.max-n.min,r=Math.abs(a.max-a.min),n=t?n.max-i:i-n.min,n=a.min+r*n/e;return 0<e?clamp(n,a.min,a.max):a.min}};export default utilities;