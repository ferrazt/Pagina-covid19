"use strict";var __extends=this&&this.__extends||function(){var r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(e,t)};return function(e,t){function i(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)}}();import MultipleLinesMixin from"../../../Mixins/MultipleLines.js";import ReduceArrayMixin from"../../../Mixins/ReduceArray.js";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";var SMAIndicator=SeriesRegistry.seriesTypes.sma;import U from"../../../Core/Utilities.js";var extend=U.extend,isArray=U.isArray,merge=U.merge,StochasticIndicator=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.data=void 0,e.options=void 0,e.points=void 0,e}return __extends(e,t),e.prototype.init=function(){SeriesRegistry.seriesTypes.sma.prototype.init.apply(this,arguments),this.options=merge({smoothedLine:{styles:{lineColor:this.color}}},this.options)},e.prototype.getValues=function(e,t){var i,r,o,s=t.periods[0],n=t.periods[1],a=e.xData,p=e.yData,l=p?p.length:0,c=[],d=[],y=[],u=null;if(!(l<s)&&isArray(p[0])&&4===p[0].length){for(o=s-1;o<l;o++)i=p.slice(o-s+1,o+1),i=(r=ReduceArrayMixin.getArrayExtremes(i,2,1))[0],i=(p[o][3]-i)/(r[1]-i)*100,d.push(a[o]),y.push([i,null]),s-1+(n-1)<=o&&(u=SeriesRegistry.seriesTypes.sma.prototype.getValues.call(this,{xData:d.slice(-n),yData:y.slice(-n)},{period:n}).yData[0]),c.push([a[o],i,u]),y[y.length-1][1]=u;return{values:c,xData:d,yData:y}}},e.defaultOptions=merge(SMAIndicator.defaultOptions,{params:{index:void 0,period:void 0,periods:[14,3]},marker:{enabled:!1},tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span><b> {series.name}</b><br/>%K: {point.y}<br/>%D: {point.smoothed}<br/>'},smoothedLine:{styles:{lineWidth:1,lineColor:void 0}},dataGrouping:{approximation:"averages"}}),e}(SMAIndicator);extend(StochasticIndicator.prototype,{nameComponents:["periods"],nameBase:"Stochastic",pointArrayMap:["y","smoothed"],parallelArrays:["x","y","smoothed"],pointValKey:"y",linesApiNames:["smoothedLine"],drawGraph:MultipleLinesMixin.drawGraph,getTranslatedLinesNames:MultipleLinesMixin.getTranslatedLinesNames,translate:MultipleLinesMixin.translate,toYData:MultipleLinesMixin.toYData}),SeriesRegistry.registerSeriesType("stochastic",StochasticIndicator);export default StochasticIndicator;